{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rakes\\\\OneDrive\\\\Desktop\\\\WeatherApp\\\\weatherapp\\\\src\\\\Weather.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // You may need to install axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(''); // You can set a default city\n\n  useEffect(() => {\n    // Replace 'YOUR_API_KEY' with your OpenWeatherMap API key\n    const apiKey = '268a8e5bdfe2c8956ad80e2fe76b1e15';\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(response => setWeatherData(response.data)).catch(error => console.error('Error fetching data:', error));\n  }, [city]);\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"cityInput\",\n      children: \"Enter City: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"cityInput\",\n      value: city,\n      onChange: handleCityChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [weatherData.name, \", \", weatherData.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", weatherData.main.speed, \"km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"DsqvnnlcFEIRcSFsBVRH0wDfhX8=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","city","setCity","apiKey","apiUrl","get","then","response","data","catch","error","console","handleCityChange","event","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","name","sys","country","weather","description","main","temp","humidity","speed","_c","$RefreshReg$"],"sources":["C:/Users/rakes/OneDrive/Desktop/WeatherApp/weatherapp/src/Weather.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // You may need to install axios\r\n\r\nconst Weather = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [city, setCity] = useState(''); // You can set a default city\r\n\r\n  useEffect(() => {\r\n    // Replace 'YOUR_API_KEY' with your OpenWeatherMap API key\r\n    const apiKey = '268a8e5bdfe2c8956ad80e2fe76b1e15';\r\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n\r\n    axios.get(apiUrl)\r\n      .then(response => setWeatherData(response.data))\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, [city]);\r\n\r\n  const handleCityChange = (event) => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <label htmlFor=\"cityInput\">Enter City: </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"cityInput\"\r\n        value={city}\r\n        onChange={handleCityChange}\r\n      />\r\n\r\n      {weatherData && (\r\n        <div>\r\n          <h2>{weatherData.name}, {weatherData.sys.country}</h2>\r\n          <p>{weatherData.weather[0].description}</p>\r\n          <p>Temperature: {weatherData.main.temp}Â°C</p>\r\n          <p>Humidity: {weatherData.main.humidity}%</p>\r\n          <p>Wind: {weatherData.main.speed}km/h</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}